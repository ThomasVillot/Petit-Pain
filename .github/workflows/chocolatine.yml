name: chocolatine

env:
  MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-LIL-2-1-chocolatine-thomas.villot.git
  EXECUTABLE: ./anagram

on:
  push:
    branches-ignore:
      - "ga-ignore"
  pull_request:
    branches-ignore:
      - "ga-ignore"
  check_run:
    types: [rerequested, completed]

jobs:
  check_repository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if repository is the mirror
        run: |
          if [[ "${{ github.repository }}" == "EpitechPromo2029/B-DOP-200-LIL-2-1-chocolatine-thomas.villot" ]]; then
            echo "Already in Epitech repository, no need to push to mirror"
            exit 0
          else
            echo "Not in Epitech repository, will push to mirror"
            exit 1
          fi

  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - uses: actions/checkout@v4
      - run: |
          check.sh $(pwd) $(pwd)
          if [ ! -s "coding-style-reports.log" ]; then
            echo "File is empty."
          else
            echo "File is not empty."
            exit 1
          fi

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker

    steps:
      - uses: actions/checkout@v4
      - run: |
          make
          if [ ! -f ${{ env.EXECUTABLE }} ]; then
            echo "Compilation failed."
            exit 1
          else
            echo "Compilation succeeded."
            make clean
          fi

  running_test:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker

    steps:
      - uses: actions/checkout@v4
      - run: |
          make tests_run
          if [ $? -ne 0 ]; then
            echo "Tests failed."
            exit 1
          else
            echo "Tests succeeded."
          fi

  push_to_mirror:
    needs: running_test
    needs: check_repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.PETIT_PAIN }}